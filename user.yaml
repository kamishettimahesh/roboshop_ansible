- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable nodejs and enable nodejs:18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y 
  
  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: roboshop user add
    ansible.builtin.user:
      name: roboshop

  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download user
    ansible.builtin.get_url:
      url:  https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: Extract user file
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: download dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app



  - name: copy user.service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service
    
  - name: daemon reload 
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copy mongodb.repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb-org-shell
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the users count
    ansible.builtin.command:  mongo --host 172.31.36.162 --quiet --eval 'db = db.getSiblingDB("users"); db.products.count()'
    register: user_count

  - name: load user data
    ansible.builtin.command: mongo --host 172.31.36.162 < /app/schema/user.js
    when: product_count.stdout == "0"

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes 